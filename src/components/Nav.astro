---
import ThemeToggle from './ThemeToggle.astro';
//import Logo from './Logo.astro';

interface Props {
  current: string;
}

const { current } = Astro.props;
---

<script>
  class NavigationManager {
    private menuButton: HTMLButtonElement | null;
    private navLinks: HTMLDivElement | null;
    private documentClickHandler: (event: MouseEvent) => void;

    constructor() {
      this.menuButton = document.querySelector('.menu-icon');
      this.navLinks = document.querySelector('.nav-links');
      
      this.documentClickHandler = this.handleDocumentClick.bind(this);
      this.init();
    }

    private init(): void {
      if (this.menuButton) {
        this.menuButton.addEventListener('click', () => this.toggleMenu());
      }
      
      document.addEventListener('click', this.documentClickHandler);
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') this.closeMenu();
      });
    }

    private toggleMenu(): void {
      if (!this.navLinks || !this.menuButton) return;
      
      const isOpen = this.navLinks.classList.toggle('open');
      this.menuButton.innerHTML = isOpen ? '✕' : '☰';
      this.menuButton.setAttribute('aria-expanded', String(isOpen));
      document.body.style.overflow = isOpen ? 'hidden' : '';
    }

    private closeMenu(): void {
      if (!this.navLinks || !this.menuButton) return;
      
      this.navLinks.classList.remove('open');
      this.menuButton.innerHTML = '☰';
      this.menuButton.setAttribute('aria-expanded', 'false');
      document.body.style.overflow = '';
    }

    private handleDocumentClick(event: MouseEvent): void {
      if (!this.navLinks || !this.menuButton) return;
      
      const target = event.target as HTMLElement;
      if (
        this.navLinks.classList.contains('open') && 
        !this.navLinks.contains(target) && 
        target !== this.menuButton
      ) {
        this.closeMenu();
      }
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    new NavigationManager();
  });
</script>

<style>
  nav {
    align-items: center;
    display: flex;
    font-family: var(--font-family-sans);
    font-weight: 700;
    justify-content: space-between;
    text-transform: uppercase;
    position: relative;
    padding: 1rem;
  }


  .menu-icon {
    display: none;
    cursor: pointer;
    font-size: 1.8rem;
    background: transparent;
    border: none;
    padding: 5px;
    z-index: 100;
    color: var(--text-main);
  }

  .nav-links {
    display: flex;
    gap: 15px;
    align-items: center;
  }

  .nav-links a {
    color: var(--text-main);
    text-decoration: none;
    padding: 10px 5px;
    display: block;
    position: relative;
    min-width: 70px;
    text-align: center;
    transition: opacity 0.3s ease;
  }

  .nav-links a:not(.selected) {
    opacity: 0.7;
  }

  .nav-links a::before {
    content: '';
    position: absolute;
    transition: transform 0.3s ease;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 2px;
    background: var(--text-main);
    transform: scaleX(0);
  }

  .nav-links a:hover::before,
  .nav-links .selected::before {
    transform: scaleX(1);
  }

  .theme-toggle-container {
    width: 75px;
    margin-left: 15px;
  }

  @media screen and (max-width: 768px) {
    .menu-icon {
      display: block;
      order: 1;
    }


    .nav-links {
      display: none;
      flex-direction: column;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      height: 100vh;
      width: 100%;
      background: var(--background-body);
      z-index: 98;
      justify-content: center;
      align-items: center;
      gap: 30px;
      transition: opacity 0.3s ease;
    }

    .nav-links.open {
      display: flex;
      opacity: 1;
    }

    .nav-links a {
      width: auto;
      text-align: center;
      padding: 15px;
      font-size: 1.2rem;
      max-width: 200px;
    }

    .theme-toggle-container {
      order: 2;
      margin-left: 0;
      margin-right: auto;
      z-index: 99;
      position: relative;
    }
  }
</style>

<nav>


  <button 
    class="menu-icon" 
    aria-label="Toggle navigation menu"
    aria-expanded="false"
    aria-controls="nav-links"
  >
    ☰
  </button>

  <div class="nav-links" id="nav-links" role="navigation">
    <a class={current === "" ? "selected" : ""} href="/">Home</a>
    <a class={current === "about" ? "selected" : ""} href="/about">About</a>
    <a class={current === "blog/news" ? "selected" : ""} href="/blog/news/1">News</a>
    <a class={current === "blog/tech-and-science" ? "selected" : ""} href="/blog/tech-and-science/1">Technology</a>
    <a class={current === "blog/entertainment" ? "selected" : ""} href="/blog/entertainment/1">Entertainment</a>
    <a class={current === "blog/trailers" ? "selected" : ""} href="/blog/trailers/1">Trailers</a>
    <a class={current === "blog/deals" ? "selected" : ""} href="/blog/deals/1">Deals</a>
  </div>

  <div class="theme-toggle-container">
    <ThemeToggle />
  </div>
</nav>