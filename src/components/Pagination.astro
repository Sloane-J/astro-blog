---
const { currentPage = 1, totalPages = 1, urlBase = "/blog" } = Astro.props;

const prevPage = currentPage > 1 ? currentPage - 1 : null;
const nextPage = currentPage < totalPages ? currentPage + 1 : null;

// Ensure pageNumbers is always an array
let pageNumbers = [];

if (totalPages > 1) {
  if (totalPages <= 5) {
    pageNumbers = Array.from({ length: totalPages }, (_, i) => i + 1);
  } else {
    pageNumbers.push(1);
    if (currentPage > 3) pageNumbers.push("...");
    
    let start = Math.max(2, currentPage - 1);
    let end = Math.min(totalPages - 1, currentPage + 1);
    
    for (let i = start; i <= end; i++) {
      pageNumbers.push(i);
    }

    if (currentPage < totalPages - 2) pageNumbers.push("...");
    pageNumbers.push(totalPages);
  }
}
---

{totalPages > 1 && (
  <div class="pagination">
    <div class="pagination-links">
      {prevPage ? (
        <a href={`${urlBase}${prevPage === 1 ? '' : `/${prevPage}`}`} class="pagination-link prev">
          &larr; Previous
        </a>
      ) : (
        <span class="pagination-link prev disabled">&larr; Previous</span>
      )}
      
      <div class="pagination-numbers">
        {pageNumbers.length > 0 
          ? pageNumbers.map((page) => (
              page === "..." 
              ? <span class="pagination-ellipsis">...</span>
              : <a href={`${urlBase}${page === 1 ? '' : `/${page}`}`} class={`pagination-number ${currentPage === page ? 'active' : ''}`}>
                  {page}
                </a>
            ))
          : <span class="pagination-ellipsis">No Pages</span>
        }
      </div>
      
      {nextPage ? (
        <a href={`${urlBase}/${nextPage}`} class="pagination-link next">
          Next &rarr;
        </a>
      ) : (
        <span class="pagination-link next disabled">Next &rarr;</span>
      )}
    </div>
    
    <div class="pagination-info">
      Page {currentPage} of {totalPages}
    </div>
  </div>
)}


<style>
  .pagination {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 40px 0;
  }
  
  .pagination-links {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .pagination-link {
    padding: 8px 16px;
    color: var(--primary-color, #4a6cf7);
    border: 1px solid var(--primary-color, #4a6cf7);
    border-radius: 4px;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  .pagination-link:hover:not(.disabled) {
    background-color: var(--primary-color, #4a6cf7);
    color: white;
  }
  
  .pagination-link.disabled {
    color: #ccc;
    border-color: #eee;
    cursor: not-allowed;
  }
  
  .pagination-numbers {
    display: flex;
    gap: 5px;
    align-items: center;
  }
  
  .pagination-ellipsis {
    margin: 0 5px;
    color: var(--text-secondary);
  }
  
  .pagination-number {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    text-decoration: none;
    color: var(--text-color);
    transition: all 0.3s ease;
  }
  
  .pagination-number:hover {
    background-color: #f0f0f0;
  }
  
  .pagination-number.active {
    background-color: var(--primary-color, #4a6cf7);
    color: white;
  }
  
  .pagination-info {
    margin-top: 10px;
    font-size: 0.9rem;
    color: var(--text-secondary);
  }
</style>