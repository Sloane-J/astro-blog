---
import { ClientRouter } from 'astro:transitions'
import '../styles/fonts.css'
import '../styles/global.css'

export interface Props {
  title: string
  description: string
  permalink: string
}

const { title, description, permalink } = Astro.props
const socialUrl = Astro.site.href + 'assets/social.png'
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="lang" content="en">

<meta name="apple-mobile-web-app-title" content="NextFrame Digest">
<meta name="application-name" content="NextFrame Digest">
<!-- Favicon -->
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/site.webmanifest">

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<link rel="canonical" href="https://nextframe-digest.vercel.app/">
<meta property="og:locale" content="en_US">
<meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1">
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={permalink} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialUrl} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={permalink} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialUrl} />

<!-- Structured Data -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Blog",
  "@id": "https://yourblogurl.com/blog/",
  "mainEntityOfPage": "https://yourblogurl.com/blog",
  "name": "{title}",
  "description": "{description}",
  "publisher": {
    "@type": "Organization",
    "@id": "https://yourblogurl.com",
    "name": "Your Organization Name",
    "logo": {
      "@type": "ImageObject",
      "@id": "https://yourblogurl.com/assets/logo.png",
      "url": "https://yourblogurl.com/assets/logo.png",
      "width": 600,
      "height": 60
    }
  },
  "blogPost": [
    {
      "@type": "BlogPosting",
      "@id": "https://yourblogurl.com/blog/post-1/#BlogPosting",
      "mainEntityOfPage": "https://yourblogurl.com/blog/post-1/",
      "headline": "Post Title 1",
      "name": "Post Title 1",
      "description": "A short description of Post 1.",
      "datePublished": "2025-03-26",
      "dateModified": "2025-03-26",
      "author": {
        "@type": "Person",
        "@id": "https://yourblogurl.com/about/#Person",
        "name": "Samuel Dorkey"
      },
      "image": {
        "@type": "ImageObject",
        "@id": "https://yourblogurl.com/assets/images/post-1.jpg",
        "url": "https://yourblogurl.com/assets/images/post-1.jpg",
        "width": 800,
        "height": 600
      },
      "url": "https://yourblogurl.com/blog/post-1/",
      "keywords": [
        "Keyword1",
        "Keyword2",
        "Keyword3"
      ]
    }
  ]
}
</script>

<ClientRouter />

<!-- Theme Management -->
<script is:inline>
  const root = document.documentElement
  const theme = localStorage.getItem('theme')
  if (
    theme === 'dark' ||
    (!theme && window.matchMedia('(prefers-color-scheme: dark)').matches)
  ) {
    root.classList.add('theme-dark')
  } else {
    root.classList.remove('theme-dark')
  }
</script>