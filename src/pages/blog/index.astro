---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Pagination from '../../components/Pagination.astro';

const title = "Luminary ☀ | Blog";
const description = 'Latest articles on News, Tech and Science, Trailers, and Deals.';
const permalink = `${Astro.site.href}blog`;

let allPosts = await Astro.glob('../../data/blog-posts/*.md');
allPosts = allPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());

// Pagination settings
const postsPerPage = 10;
const totalPages = Math.ceil(allPosts.length / postsPerPage);
const currentPage = 1; // Index page is always page 1
const paginatedPosts = allPosts.slice(0, postsPerPage);

// Get unique sections from posts
const sections = [...new Set(allPosts.map(post => post.frontmatter.category).filter(Boolean))];
---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <div class="container">
    <h1>The Blog</h1>
    
    <!-- Section Navigation -->
    <div class="section-navigation">
      {sections.map(section => (
        <a href={`/blog/${section.toLowerCase().replace(/\s+/g, '-')}`} class="section-link">
          {section}
        </a>
      ))}
    </div>

    <!-- Featured Post (First Post) -->
    {paginatedPosts.length > 0 && (
      <div class="featured-post">
        <h2>Featured Post</h2>
        <div class="post-item featured">
          {paginatedPosts[0].frontmatter.featuredImage && (
            <div class="featured-image-container large">
              <img 
                src={paginatedPosts[0].frontmatter.featuredImage} 
                alt={paginatedPosts[0].frontmatter.title}
                class="featured-image"
              />
            </div>
          )}
          <div class="post-content">
            <h2>
              <a href={`/blog/${paginatedPosts[0].file.split('/').pop().split('.').shift()}`}>{paginatedPosts[0].frontmatter.title}</a>
            </h2>
            <p>{paginatedPosts[0].frontmatter.description}</p>
            
            <div class="post-meta">
              {paginatedPosts[0].frontmatter.category && (
                <span class="category">{paginatedPosts[0].frontmatter.category}</span>
              )}
              
              {paginatedPosts[0].frontmatter.tags && paginatedPosts[0].frontmatter.tags.length > 0 && (
                <div class="tags">
                  {paginatedPosts[0].frontmatter.tags.map(tag => (
                    <span class="tag">{tag}</span>
                  ))}
                </div>
              )}
            </div>
            
            <div class="post-item-footer">
              <span class="post-item-date">— {paginatedPosts[0].frontmatter.publishDate}</span>
              <a href={`/blog/${paginatedPosts[0].file.split('/').pop().split('.').shift()}`} class="read-more-btn">Continue Reading</a>
            </div>
          </div>
        </div>
      </div>
    )}

    <h2>Latest Posts</h2>
    {paginatedPosts.slice(1).map((post, index) => {
      const href = `/blog/${post.file.split('/').pop().split('.').shift()}`;
      return (
        <div>
          { index !== 0 && <hr /> }
          <div class="post-item">
            {post.frontmatter.featuredImage && (
              <div class="featured-image-container">
                <img 
                  src={post.frontmatter.featuredImage} 
                  alt={post.frontmatter.title}
                  class="featured-image"
                />
              </div>
            )}
            <div class="post-content">
              <h2>
                <a href={href}>{post.frontmatter.title}</a>
              </h2>
              <p>{post.frontmatter.description}</p>
              
              <div class="post-meta">
                {post.frontmatter.category && (
                  <a href={`/blog/${post.frontmatter.category.toLowerCase().replace(/\s+/g, '-')}`} class="category">
                    {post.frontmatter.category}
                  </a>
                )}
                
                {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (
                  <div class="tags">
                    {post.frontmatter.tags.map(tag => (
                      <span class="tag">{tag}</span>
                    ))}
                  </div>
                )}
              </div>
              
              <div class="post-item-footer">
                <span class="post-item-date">— {post.frontmatter.publishDate}</span>
                <a href={href} class="read-more-btn">Continue Reading</a>
              </div>
            </div>
          </div>
        </div>
      )
    })}
    
    <!-- Pagination Component -->
    {totalPages > 1 && (
      <Pagination currentPage={currentPage} totalPages={totalPages} urlBase="/blog" />
    )}
  </div>
</BaseLayout>

<style>
  h2,
  .post-item-footer {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .section-navigation {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 30px;
    justify-content: center;
  }

  .section-link {
    display: inline-block;
    padding: 8px 16px;
    background-color: var(--primary-color, #4a6cf7);
    color: white;
    border-radius: 20px;
    text-decoration: none;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    font-weight: 500;
  }

  .section-link:hover {
    background-color: white;
    color: var(--primary-color, #4a6cf7);
    box-shadow: 0 0 0 2px var(--primary-color, #4a6cf7);
  }

  .featured-post {
    margin-bottom: 60px;
  }

  .post-item {
    display: flex;
    flex-direction: column;
    margin-bottom: 40px;
  }

  .post-item.featured {
    border-radius: 12px;
    padding: 20px;
    background-color: rgba(74, 108, 247, 0.05);
    border: 1px solid rgba(74, 108, 247, 0.1);
  }

  @media (min-width: 768px) {
    .post-item {
      flex-direction: row;
      gap: 30px;
    }
  }

  .featured-image-container {
    flex: 0 0 280px;
    margin-bottom: 20px;
  }

  .featured-image-container.large {
    flex: 0 0 100%;
    margin-bottom: 20px;
  }

  @media (min-width: 768px) {
    .featured-image-container.large {
      flex: 0 0 400px;
    }
  }

  @media (min-width: 768px) {
    .featured-image-container {
      margin-bottom: 0;
    }
  }

  .featured-image {
    width: 100%;
    object-fit: cover;
    border-radius: 8px;
  }

  .post-content {
    flex: 1;
  }

  .post-item-date {
    color: var(--text-secondary);
    text-align: left;
    text-transform: uppercase;
    margin-right: 16px;
  }

  .post-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 15px;
  }

  .category {
    background-color: var(--primary-color, #4a6cf7);
    color: white;
    padding: 3px 10px;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
    text-decoration: none;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .tag {
    background-color: #e0e0e0;
    color: #555555;
    padding: 3px 10px;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
  }

  .post-item-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 20px;
  }

  .read-more-btn {
    display: inline-block;
    padding: 8px 16px;
    background-color: var(--primary-color, #4a6cf7);
    color: white;
    border-radius: 4px;
    text-decoration: none;
    font-size: 0.9rem;
    transition: background-color 0.4s ease-in;
    font-weight: 500;
  }

  .read-more-btn:hover {
    background-color: white;
    color: var(--primary-color, #4a6cf7);
    transition: background-color 0.4s ease-out;
  }

  hr {
    margin: 60px auto;
  }
</style>