---
import BaseLayout from '../../layouts/BaseLayout.astro';

// Define getStaticPaths function for dynamic routes
export async function getStaticPaths() {
  const allPosts = await Astro.glob('../../data/blog-posts/*.md');
  
  return allPosts.map((post) => {
    const slug = post.file.split('/').pop().split('.').shift();
    return {
      params: { slug },
      props: { post },
    };
  });
}

// Get the post from props passed by getStaticPaths
const { post } = Astro.props;

// Extract and prepare meta data more efficiently
const { frontmatter } = post;
const { title, description, publishDate, category, tags, featuredImage } = frontmatter;
const slug = post.file.split('/').pop().split('.').shift();
const permalink = `${Astro.site.href}blog/${slug}`;

// Remove console.log in production
---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <div class="container">
    <header class="post-header">
      <h1>{title}</h1>
      <time class="post-date" datetime={publishDate}>{publishDate}</time>
      
      {(category || (tags && tags.length > 0)) && (
        <div class="post-meta">
          {category && <span class="category">{category}</span>}
          
          {tags && tags.length > 0 && (
            <div class="tags">
              {tags.map((tag) => <span class="tag">{tag}</span>)}
            </div>
          )}
        </div>
      )}
    </header>
    
    {featuredImage && (
      <div class="featured-image-container">
        <img src={featuredImage} alt={title} class="featured-image" loading="lazy" />
      </div>
    )}
    
    <article class="content">
      <post.Content />
    </article>
    
    <div class="back-link">
      <a href="/blog">&larr; Back to Blog</a>
    </div>
  </div>
</BaseLayout>

<style>
  .post-header {
    margin-bottom: 2rem;
  }
  
  .post-date {
    display: block;
    color: var(--text-secondary);
    margin-bottom: 1rem;
  }
  
  .featured-image-container {
    margin: 2rem 0;
  }
  
  .featured-image {
    width: 100%;
    max-height: 400px;
    object-fit: cover;
    border-radius: 8px;
  }
  
  .post-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 15px;
  }
  
  .category {
    background-color: var(--primary-color, #4a6cf7);
    color: white;
    padding: 3px 10px;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
    text-decoration: none;
  }
  
  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .tag {
    background-color: #e0e0e0;
    color: #555555;
    padding: 3px 10px;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
  }
  
  .content {
    margin: 2rem 0;
  }
  
  .back-link {
    margin-top: 3rem;
  }
  
  .back-link a {
    display: inline-block;
    padding: 0.5rem 1rem;
    color: var(--text-secondary);
    text-decoration: none;
    border: 1px solid var(--text-secondary);
    border-radius: 4px;
    transition: all 0.2s ease;
  }
  
  .back-link a:hover {
    color: var(--primary-color);
    border-color: var(--primary-color);
  }
</style>