---
// src/pages/blog/[page].astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import Pagination from "../../components/Pagination.astro";

export async function getStaticPaths({ paginate }) {
  const postsPerPage = 5;
  
  // Use import.meta.glob with { eager: true } to get the content immediately
  const postModules = import.meta.glob("../../data/blog-posts/*.md", { eager: true });
  
  // Convert object to array of posts
  const allPosts = Object.entries(postModules).map(([path, module]) => {
    const slug = path.split('/').pop().replace('.md', '');
    return {
      slug,
      path,
      ...module.frontmatter
    };
  });

  // Sort posts by date (newest first)
  const sortedPosts = allPosts.sort((a, b) => 
    new Date(b.publishDate).valueOf() - new Date(a.publishDate).valueOf()
  );
  
  // Use Astro's built-in paginate function
  return paginate(sortedPosts, { pageSize: postsPerPage });
}

const { page } = Astro.props;
const title = `Blog - Page ${page.currentPage}`;
const description = `Blog posts - Page ${page.currentPage} of ${page.lastPage}`;
---

<BaseLayout title={title} description={description} current="blog">
  <div class="container">
    <h1>Blog Posts</h1>
    <p>Page {page.currentPage} of {page.lastPage}</p>
    
    <ul class="post-list">
      {page.data.map(post => (
        <li class="post-item">
          <a href={`/blog/${post.slug}`}>
            <h2>{post.title}</h2>
            <p>{post.description}</p>
            <div class="post-meta">
              <span class="post-date">
                {new Date(post.publishDate).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </span>
              {post.category && <span class="post-category">{post.category}</span>}
            </div>
          </a>
        </li>
      ))}
    </ul>
    
    <Pagination currentPage={page.currentPage} totalPages={page.lastPage} urlBase="/blog" />
  </div>
</BaseLayout>